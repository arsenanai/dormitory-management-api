services:
  # Database - PostgreSQL 16
  db:
    image: postgres:16-alpine
    container_name: crm-db-local
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-dormitory_management}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE:-dormitory_management}"]
      timeout: 20s
      retries: 5

  # Backend API - Laravel
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crm-api-local
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-dormitory_management}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      CACHE_STORE: file
      SESSION_DRIVER: file
      QUEUE_CONNECTION: sync
    depends_on:
      db:
        condition: service_healthy
    networks:
      - crm_local_net

volumes:
  postgres_data:

networks:
  crm_local_net:
    driver: bridge
