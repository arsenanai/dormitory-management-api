services:
  # Database - PostgreSQL 16
  db:
    image: postgres:16-alpine
    container_name: crm-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-dormitory_management}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - it_services_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE:-dormitory_management}"]
      timeout: 20s
      retries: 5

  # Backend API - Laravel
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crm-api
    hostname: dorm.sdu.edu.kz
    restart: unless-stopped
    volumes:
      # This volume persists storage for file uploads, logs, and other generated assets.
      # The application code itself is copied into the image during the build process.
      - ./storage:/var/www/html/storage
    environment:
      # Environment variables are loaded from the .env file via the --env-file flag.
      # Only production-safe defaults or overrides should be placed here.
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
    depends_on:
      db:
        condition: service_healthy
    ports:
      # CRITICAL: This maps the container's internal web server port (80)
      # to the host machine's port (8001). The reverse proxy will connect to 8001.
      - "8001:80"
    networks:
      - it_services_net

volumes:
  postgres_data:

networks:
  it_services_net:
    external: true