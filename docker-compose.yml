services:
  composer:
    build: .
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: composer install

  migrate:
    build: .
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
    command: sh -c "php artisan migrate:fresh"

  seed:
    build: .
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
    command: sh -c "php artisan db:seed"

  test:
    build: .
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    environment:
      APP_ENV: testing
      DB_CONNECTION: sqlite
      DB_DATABASE: ":memory:"
    depends_on:
      - composer
    command: php artisan test

  dev:
    build: .
    working_dir: /var/www/html
    ports:
      - "8000:8000"
    volumes:
      - .:/var/www/html
    environment:
      APP_ENV: local
      APP_DEBUG: true
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - db
      - redis
      - composer
    command: php artisan serve --host=0.0.0.0 --port=8000

  app:
    build: .
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    environment:
      APP_ENV: production
      APP_DEBUG: false
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PHP_MEMORY_LIMIT: 512M
      PHP_UPLOAD_MAX_FILESIZE: 20M
      PHP_POST_MAX_SIZE: 20M
      VIRTUAL_HOST: yourdomain.com
      LETSENCRYPT_HOST: yourdomain.com
      LETSENCRYPT_EMAIL: your-email@example.com
    depends_on:
      - db
      - redis
      - composer
    command: sh -c "php artisan storage:link && php artisan config:cache && php artisan route:cache && php-fpm"

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-letsencrypt
    restart: unless-stopped
    depends_on:
      - nginx-proxy
    environment:
      - DEFAULT_EMAIL=your-email@example.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html

  db:
    image: postgres:16
    container_name: dormitory-management-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: dormitory-management-redis
    restart: unless-stopped
    ports:
      - "6379:6379"

volumes:
  pgdata: