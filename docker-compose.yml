services:
  init:
    image: php:8.2-cli
    container_name: dormitory-management-back-init
    working_dir: /var/www
    volumes:
      - .:/var/www
    command: sh -c "composer install --no-interaction --prefer-dist --optimize-autoloader"

  dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dormitory-management-back-dev
    working_dir: /var/www
    volumes:
      - .:/var/www
    ports:
      - "8000:8000"
    environment:
      APP_ENV: local
      APP_DEBUG: true
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - init
      - db
      - redis
    command: sh -c |
      php artisan key:generate &&
      until php artisan migrate --force; do echo 'Waiting for DB...'; sleep 3; done &&
      php artisan serve --host=0.0.0.0 --port=8000
    profiles:
      - dev

  test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dormitory-management-back-test
    working_dir: /var/www
    volumes:
      - .:/var/www
    environment:
      APP_ENV: testing
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - init
      - db
    command: sh -c "php artisan test"
    profiles:
      - test

  build:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dormitory-management-back-build
    working_dir: /var/www
    volumes:
      - .:/var/www
    environment:
      APP_ENV: production
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - init
      - db
      - redis
    command: sh -c |
      php artisan key:generate &&
      until php artisan migrate --force; do echo 'Waiting for DB...'; sleep 3; done &&
      php artisan config:cache &&
      php artisan route:cache
    profiles:
      - prod

  serve:
    image: nginx:alpine
    container_name: dormitory-management-back-serve
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - build
    profiles:
      - prod

  db:
    image: postgres:16
    container_name: dormitory-management-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: dormitory-management-redis
    restart: unless-stopped
    ports:
      - "6379:6379"

volumes:
  pgdata:
